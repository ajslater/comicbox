[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = ["poetry.core.masonry.api"]

[tool.poetry]
name = "comicbox"
version = "0.6.0a0"
description = "An API for reading comic archives"
license = "LGPL-3.0-only"
authors = ["AJ Slater <aj@slater.net>"]
readme = "README.md"
homepage = "https://github.com/ajslater/comicbox"
repository = "https://github.com/ajslater/comicbox"
documentation = "https://github.com/ajslater/comicbox"
keywords = ["comic", "cbz", "cbr", "cbt"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
]
packages = [{ include = "comicbox" }, { include = "tests", format = "sdist" }]
include = ["NEWS"]

[tool.poetry.dependencies]
python = "^3.7"
ansicolors = "^1.1.8"
confuse = "^2.0.0"
deepdiff6 = "^6.2.0"
defusedxml = "^0.7.1"
pycountry = "^22.1.3"
parse = "^1.15"
rarfile = "^4.0"

[tool.poetry.dev-dependencies]
bandit = "^1.7.4"
codespell = "^2.1.0"
coverage = { extras = ["toml"], version = "^6.0" }
flake8 = "^5.0.4"
flake8-black = "^0.3.2"
flake8-bugbear = "^22.3"
flake8-docstrings = "^1.5"
flake8-eradicate = "^1.2.1"
isort = "^5.10.1"
pep8-naming = "^0.13.1"
pyright = "^1.1"
pytest = "^7.0"
pytest-cov = "^4.0"
pytest-gitignore = "^1.3"
radon = "^5.1"
vulture = "^2.1"

[tool.poetry.scripts]
comicbox = "comicbox.cli:main"

[tool.bandit]
# most options must be on the command line
exclude = [".venv", "node_modules", "**/__pycache__"]

[tool.black]
exclude = "/(.git|.mypy_cache|.pytest_cache|.venv|__pycache__|dist|node_modules|test-results|typings)/"

[tool.coverage.run]
source = ["comicbox"]
branch = true
concurrency = ["multiprocessing"]
omit = [
  ".git/*",
  ".mypy_cache/*",
  ".pytest_cache/*",
  ".venv/*",
  "*__pycache__*",
  "dist/*",
  "node_modules/*",
  "test-results/*",
  "typings/*",
]

[tool.coverage.html]
directory = "test-results/coverage"

[tool.isort]
profile = "black"
atomic = true
lines_after_imports = 2
lines_between_types = 1
multi_line_output = 3
skip = ".git,__pycache__,.pytest_cache,.venv,node_modules,typings"
color_output = true

[tool.pytest.ini_options]
junit_family = "xunit2"
addopts = """
    --junit-xml=test-results/pytest/results.xml
    -ra
    --strict-markers
    --cov
    --cov-append
    --cov-report=html
    --cov-report=term
    --ignore=.git
    --ignore=.mypy_cache
    --ignore=.venv
    --ignore=dist
    --ignore=node_modules
    --ignore=test-results
    --ignore=typings
    --ignore-glob=*__pycache__*
"""

[tool.pyright]
exclude = [
  "**/__pycache__",
  "**/node_modules",
  ".git",
  ".mypy_cache",
  ".pytest_cache",
  ".venv",
  "dist",
  "package-lock.json",
  "poetry.lock",
  "test-results",
  "typings"
]
useLibraryCodeForTypes = true

[tool.vulture]
min_confidence = 61
sort_by_size = true
exclude = [
  ".git/",
  ".mypy_cache/",
  ".pytest_cache/",
  ".venv/",
  "*__pycache__*",
  "dist/",
  "node_modules/",
  "test_results/",
  "typings/",
]
